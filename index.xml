<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Websites of WU Pengze</title>
    <link>https://knightwupz.github.io/</link>
    <description>Recent content on Websites of WU Pengze</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 29 Apr 2017 16:50:00 +0800</lastBuildDate>
    
	<atom:link href="https://knightwupz.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>胡搞一个博客</title>
      <link>https://knightwupz.github.io/2017/04/%E8%83%A1%E6%90%9E%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 29 Apr 2017 16:50:00 +0800</pubDate>
      
      <guid>https://knightwupz.github.io/2017/04/%E8%83%A1%E6%90%9E%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</guid>
      <description>胡搞一个博客 hugo简介 git简介 生成本地站点 首先创建一个新的本地站点，命名为knightwupz-hugo： hugo new site knightwupz-hugo
切换到新站点目录里： cd knightwupz-hugo
创建一个新的页面“about”： hugo new about.md
再创建一个新的页面“post/first”: hugo new post/first.md
注意hugo new命令创建的页面都位于content目录里。
查看页面内容： cat content/post/first.md, 已经自动生成了如下内容：
+++ date = &amp;quot;2017-04-29T15:06:24+08:00&amp;quot; draft = true title = &amp;quot;first&amp;quot; +++  此时可以自由编辑新创建的“first”文件内容，使用markdown格式。
在hugo 的github网站上下载网页模板：
cd themes git clone https://github.com/digitalcraftsman/hugo-icarus-theme.git  启动本地调试查看效果： hugo server --theme=hugo-icarus-theme --buildDrafts --watch
在浏览器中打开网址即可查看本地站点的内容：http://localhost:1313/
将本地站点资料同步到github仓库 这一步主要是方便以后的资料管理，比如可以在不同的笔记本上分别编辑不同的文件，并保持内容同步。 参考：https://gohugo.io/tutorials/github-pages-blog/ 。 1. 在github上“-hugo”仓库用于存储本地站点资料。 2. 在本地站点根目录下初始化git仓库：git init 3. 查看本地内容改动：git status 4. 将改动文件添加到本地git仓库：git add xx_files，并添加改动评语：git commit -m &#39;20170429 test my hugo websites&#39; 5.</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>https://knightwupz.github.io/2015/10/migrate-from-jekyll/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>https://knightwupz.github.io/2015/10/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>https://knightwupz.github.io/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://knightwupz.github.io/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>New Post</title>
      <link>https://knightwupz.github.io/2015/05/new-post/</link>
      <pubDate>Thu, 28 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://knightwupz.github.io/2015/05/new-post/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>New Post</title>
      <link>https://knightwupz.github.io/2015/05/new-post/</link>
      <pubDate>Thu, 28 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://knightwupz.github.io/2015/05/new-post/</guid>
      <description>&lt;p&gt;the time is not correct
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>